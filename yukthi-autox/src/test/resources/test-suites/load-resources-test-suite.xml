<testData xmlns:ccg="/fw/ccg/XMLBeanParser" xmlns:wrap="/fw/ccg/XMLBeanParser/wrap">
	<testSuite name="load-resources-test-suites">
		
		<!-- =================================
			Test with properties file
		-======================================= -->
		
		<testCase name="load_Properties">
			<description>Validates loading of properties file to context</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				
				<ccg:loadProperties contextAttribute="propFile">
					<resource>
						file:.\src\test\resources\test-suites\test.properties
					</resource>
				</ccg:loadProperties>
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="prop: attr.propFile.key1" value2="value1"/>
				<ccg:assert-equals value1="prop: attr.propFile.key2" value2="value2"/>
				<ccg:assert-equals value1="prop: attr.propFile.key3" value2="value3"/>
			</wrap:validations>
		</testCase>

		<testCase name="load_Properties_nonTemplate">
			<description>Validates loading of properties file to context by marking input as non-template</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				
				<ccg:loadProperties contextAttribute="propFile1" template="false">
					<resource>
						res:/test-suites/test.properties
					</resource>
				</ccg:loadProperties>
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="prop: attr.propFile1.key1" value2="value1"/>
				<ccg:assert-equals value1="prop: attr.propFile1.key2" value2="value2"/>
				<ccg:assert-equals value1="prop: attr.propFile1.key3" value2="${'$'}{attr.resAttribute}"/>
			</wrap:validations>
		</testCase>

		<!-- =================================
			Test with json file
		-======================================= -->

		<testCase name="load_json">
			<description>
				Loads json on to context and validates the same.
			</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				<ccg:loadJson contextAttribute="jsonObj" resource="res:/data/data.json" />
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="prop: attr.jsonObj.bean1.subbean1.sprop3" value2="someValue"/>
			</wrap:validations>
		</testCase>

		<testCase name="load_json_nonTemplate">
			<description>
				Loads json on to context as non-template and validates the same.
			</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				<ccg:loadJson contextAttribute="jsonObj" resource="res:/data/data.json" template="false"/>
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="prop: attr.jsonObj.bean1.subbean1.sprop3" value2="${'$'}{attr.resAttribute}"/>
			</wrap:validations>
		</testCase>

		<!-- =================================
			Test with text file
		-======================================= -->

		<testCase name="load_text">
			<description>
				Loads text on to context and validates the same.
			</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				<ccg:loadText contextAttribute="textObj" resource="res:/data/test-text1.txt" />
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="attr: textObj" value2="Some test content someValue"/>
			</wrap:validations>
		</testCase>

		<testCase name="load_text_nonTemplate">
			<description>
				Loads text as non template on to context and validates the same.
			</description>

			<wrap:steps>
				<ccg:set name="resAttribute" value="someValue"/>
				<ccg:loadText contextAttribute="textObj" resource="res:/data/test-text1.txt" template="false"/>
			</wrap:steps>

			<wrap:validations>
				<ccg:assert-equals value1="attr: textObj" value2="Some test content ${'$'}{attr.resAttribute}"/>
			</wrap:validations>
		</testCase>
	</testSuite>
</testData>