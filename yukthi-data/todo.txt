12/08/2019
=========
In the fetch queries we should be able to return sub entities
	For example from order item repo we should be able to return list of orders which has order-item with specified property
		The sub entity collection should be lazily loadable
	
	On same lines if the result bean is having sub beans, those also should be loaded recursively to build required tree directly from result
	
Support for upsert / merge

26/11/2017
=========
In order to improve performance, while mapping record data to beans, the execution plan has to be created once (how to map columns to fields)
	and then should be executed for each record conversion.
	
	Currently for each record the code tries to find mapping logic and tries to map.
	
	Examples:
		NativeQueryExecutor fetch method logic
		ConditionalQueryBuilder (used by finder and search functions) may also use same logic - needs to be checked

29/10/2017
=============
Relation based annotations should be supported limiting to relations which has mid tables
	@AddRelation(name = relationName)
	@RemoveRelation(name = relationName)
	@RetainRelation(name = relationName) -> to retain only specified relationships 
	
		All 3 type method should accept 2 parameters as below
			sourceQuery -> can be source (current entity) entity or collection of entities. Or it can be a query object to fetch rows from current entity.
			targetQuery ->  can be target entity or collection of entities. Or it can be a query object to fetch rows from target entity.

Support for data tables which helps in supporting multiple values for single entity
	This tables also may need similar functionality as above

24/09/2017
===========
1) In OneToMany relation generally list is supported. On same lines it would be good to have Map, where key would be one of the column
	of the child entity and value would be entity itself. This would avoid extra code of converting list to map (generally required where
	child entities have unique column and parent needs to refer them with this column).
	Or might be coverter pattern can be used which helps in converting list of relations to/from the desired type (in this case Map).


16/10/2016
----------

In delete and update queries, subquery concept should be extended with new annotaiton @Subquery (to be used just like @Condition), which should group
	all conditions defined in target bean should form single sub query.
	
[Minor] The method level conditions and other conditions should be able to refer to other fields.


=========================================================
Existing test case execution

Ability to query without need of repository
	Can be part of repo factory
		name can be changed - PersistenceManager

Ability to support multi valued fields
	For rdbms sub table can be created
	@ChildTable can be used to override default child table name creation
	Should be done only explicit data type is not specified
	
	appending to existing list, during update should be supported

Ability to support sub entity (or entities)
	For rdbms sub table can be created

All queries and results should be expressible in the form of objects
	finder queries

Generic find method in repo which takes query as object and results as type
	useful for search, lov queries

For complex queties xml + free-marker should be supported

Migration of mongo functionality

Entity field extensions

join queries as objects

==========================================================
Make the common queries into single xml and other template xml file should extend this xml
	This will reduce code repetetion in derby and mysql example
	The child xml should be able to override default queries
		Mostly bean parser will take care of this overriding
		
Finder queries should be able to support bean return
	The return bean will have configuration (annotation) indicating fields to return
	The input conditions also should be supported and ConditionBean annotation
	
Support for search queries
	should be able to support child bean columns
	should be able to support all types of joins with child tables (can this be taken from entity itself?)
	
Transaction management should be moved outside data store
	query executor should initiate transaction
	transaction should be passed to data-store methods
	transaction wrapping (for step level commits) should be genralized
	
	Idea is every data store need not worry about transaction handling, it is genralized
	

[DeleteQueryExecutor] Child deletion should use its corresponding repository, so that grand-childs are deleted first recursively
[UpdateQueryExecutor] When unique fields are getting updated, make sure unique constraints are not violated
				//during unique field update might be we have to mandate id is provided as condition
[DeleteQueryExecutor] Ability to ignore child existence based on global flag (so that underlying DB will take care of delete cascade)
[UpdateQueryExecutor/SaveQuery] Ability to ignore unique/foreign constraints (let DB take care of constraints)


update/insert query methods should accept implicit values for fields
	This will help is setting some fixed values (like created-on, status) during method execution
	The value should be able to accept expression to accept dynamic values (such as today's date for created-on etc)
	
	Similarly finders/updaters/deleters should be able to accept implicit conditions
		This will be helpful in writing methods like deleteInactiveJobs()


Have validation to disallow reserved words for columns - GEN_UQ_ID

============================================================================
============================================================================

Support to fetch beans - for search queries
	Proxy collection fields are not supported currently
		Need to calculate reverse relation and set it to proxy collection

Entity Listeners
	 Only Save and update are supported currently
	 in RDBMS child entities can be auto deleted, so given low priority
	 
Migrate annotation parsing logic from column struct to Enity details factory


Cusom query support as part of repo
	 
	 