<testData xmlns:ccg="/fw/ccg/XMLBeanParser" xmlns:wrap="/fw/ccg/XMLBeanParser/wrap">
	<testSuite name="jobj-test-suites">

	<wrap:data-beans>
		<data-bean id="beanFromTestSuite" ccg:beanType="com.yukthitech.test.beans.TestObject">
			<name>beanFromTestSuite</name>
		</data-bean>
	</wrap:data-beans>

		<testCase name="invokeMethodOnAppBean">
			<description>Invokes simple method on bean declared in app-config</description>

			<wrap:steps>
				<ccg:invokeMethod method="toText">
					<object ccg:beanRef="beanFromApp"/>
					
					<parameter ccg:beanType="com.yukthitech.test.beans.SimpleBean" name="someName">
					</parameter>
				</ccg:invokeMethod>
			</wrap:steps>

			<wrap:validations>
				<ccg:validateContextParam expression="attr.returnValue" value="beanFromApp:someName"/>
			</wrap:validations>
		</testCase>


		<testCase name="invoke_method_On_Bean_Copy">
			<description>
				Invokes simple method on bean copy declared in test suite.
			</description>

			<wrap:steps>
				<ccg:invokeMethod method="toText" paramTypes="com.yukthitech.test.beans.NameBean">
					<object ccg:beanCopy="beanFromTestSuite">
						<name>beanCopy</name>
					</object>
					
					<parameter ccg:beanType="com.yukthitech.test.beans.NameBean" name="someName1">
					</parameter>
				</ccg:invokeMethod>
			</wrap:steps>

			<wrap:validations>
				<ccg:validateContextParam expression="attr.returnValue" value="beanCopy=>someName1"/>
			</wrap:validations>
		</testCase>

		<testCase name="invoke_Method_On_Suite_Bean">
			<description>
				Invokes simple method on bean declared in test suite.
			</description>

			<wrap:steps>
				<ccg:invokeMethod method="toText" paramTypes="com.yukthitech.test.beans.NameBean">
					<object ccg:beanRef="beanFromTestSuite"/>
					
					<parameter ccg:beanType="com.yukthitech.test.beans.NameBean" name="someName1">
					</parameter>
				</ccg:invokeMethod>
			</wrap:steps>

			<wrap:validations>
				<ccg:validateContextParam expression="attr.returnValue" value="beanFromTestSuite=>someName1"/>
			</wrap:validations>
		</testCase>

		<testCase name="invoke_Method_On_Suite_Bean">
			<description>
				Invokes method where an exception is expected.
			</description>

			<wrap:steps>
				<ccg:invokeMethod method="throwError">
					<object ccg:beanRef="beanFromTestSuite"/>
				</ccg:invokeMethod>
			</wrap:steps>

			<expectedException type="com.yukthitech.utils.exceptions.InvalidArgumentException">
				<property name="message" value="MESSAGE"/>
			</expectedException>
		</testCase>

		<testCase name="invoke_Method_With_Data_Provder">
			<description>
				Invokes simple method on bean with data provider and ensures data-provider working.
			</description>

			<list-data-provider name="dataString">
				<data>abc</data>
				<data>def</data>
				<data>ghi</data>
			</list-data-provider>

			<wrap:steps>
				<ccg:invokeMethod method="toText" paramTypes="com.yukthitech.test.beans.NameBean" deepCloneParams="true">
					<object ccg:beanRef="beanFromTestSuite"/>
					
					<parameter ccg:beanType="com.yukthitech.test.beans.NameBean" name="${attr.dataString}">
					</parameter>
				</ccg:invokeMethod>
			</wrap:steps>

			<wrap:validations>
				<ccg:validateContextParam expression="attr.returnValue" value="beanFromTestSuite=>${attr.dataString}"/>
			</wrap:validations>
		</testCase>

		<testCase name="invoke_Method_Data_Provder_Validations">
			<description>
				Invokes simple method on bean with data provider with dynamic validations.
			</description>

			<list-data-provider name="data">
				<map-data name="smallString" value="abc" errorCase="true" errorMssg="Name should be greater than 3"/>
				<map-data name="longString" value="abcdefg" errorCase="true" errorMssg="Name should be less than 6"/>
				<map-data name="correctString" value="abcd" errorCase="false" errorMssg=""/>
			</list-data-provider>
			
			<expectedException enabled="${attr.data.errorCase}" type="com.yukthitech.utils.exceptions.InvalidArgumentException">
				<property name="message" value="${attr.data.errorMssg}"/>
			</expectedException>

			<wrap:steps>
				<ccg:invokeMethod method="validate" paramTypes="com.yukthitech.test.beans.NameBean" deepCloneParams="true">
					<object ccg:beanRef="beanFromTestSuite"/>
					
					<parameter ccg:beanType="com.yukthitech.test.beans.NameBean" name="${attr.data.value}">
					</parameter>
				</ccg:invokeMethod>
			</wrap:steps>

			<wrap:validations>
				<ccg:validateContextParam expression="attr.returnValue" value="${attr.data.value}" >
					<enabled><![CDATA[<#if attr.data.errorCase == 'true'>false<#else>true</#if>]]></enabled>
				</ccg:validateContextParam>
			</wrap:validations>
		</testCase>

	</testSuite>
</testData>